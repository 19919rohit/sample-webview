apply plugin: 'com.android.application'

android {
    compileSdkVersion 33
    defaultConfig {
        applicationId "com.snc.sample.webview"
        minSdkVersion 16
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        //++ for Android 10 (API 29)
        buildConfigField "boolean", "FEATURE_EXTERNAL_STORAGE_DIR", "false"
        //--

        //++ for Android 11 (API 30)
        buildConfigField "boolean", "FEATURE_WEBVIEW_ASSET_LOADER", "true"

        buildConfigField "String", "ASSET_BASE_DOMAIN", "\"assets.snc.com\""
        buildConfigField "String", "ASSET_PATH", "\"/assets/\""
        buildConfigField "String", "RES_PATH", "\"/res/\""
        buildConfigField "String", "INTERNAL_PATH", "\"/public/\""
        //--

        buildConfigField "boolean", "FEATURE_WEBVIEW_BRIDGE_PLUGIN", "true"
    }
    signingConfigs {
        storeFile {
            //storeFile file('./keystore/upload_keystore.jks')
            //storePassword '<password>'
            //keyAlias '<alias>'
            //keyPassword '<password>'

            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    buildTypes {
        release {
            //signingConfig signingConfigs.storeFile
            signingConfig signingConfigs.debug
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            //signingConfig signingConfigs.storeFile
        }
    }
    flavorDimensions "version"
    productFlavors {
        free {
            dimension "version"
            manifestPlaceholders = [ applicationLabel: "@string/app_name" ]
        }
    }
    sourceSets {
        main {
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    packagingOptions {
        jniLibs {
            keepDebugSymbols += ['*/armeabi/*.so', '*/armeabi-v7a/*.so', '*/arm64-v8a/*.so', '*/mips/*.so', '*/mips64/*.so', '*/x86/*.so', '*/x86_64/*.so']
        }
        resources {
            excludes += ['META-INF/DEPENDENCIES.txt', 'META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/MANIFEST.MF', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 'META-INF/ASL2.0']
        }
    }
    lint {
        abortOnError false
        checkReleaseBuilds false
    }
    namespace 'com.snc.sample.webview'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "androidx.multidex:multidex:2.0.1"

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    //noinspection GradleCompatible
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation 'com.jakewharton.timber:timber:4.7.1'

    // runtime permission library
    implementation 'io.github.ParkSangGwon:tedpermission:3.3.0'
    implementation 'io.github.ParkSangGwon:tedpermission-normal:3.3.0'

    // retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.7'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.7'

    // androidx.webkit.WebViewAssetLoader
    implementation "androidx.webkit:webkit:1.7.0"
}

android.applicationVariants.all { variant ->
    variant.outputs.all { output ->
        def flavor = variant.productFlavors[0]
        def newApkName = variant.applicationId
        newApkName += "_" + flavor.name
        newApkName += "_" + variant.buildType.name
        newApkName += "_v" + variant.versionName
        newApkName += "_r" + variant.versionCode
        newApkName += "_" + "${getDate()}" + ".apk"

        outputFileName = new File(newApkName)

        println ''
        println ''
        println 'Rename outputFile : ' + newApkName
        println ''
        println ''
    }
}

static def getDate() {
    return new Date().format('yyyyMMdd_HHmm')
}

android.applicationVariants.all { variant ->
    variant.assembleProvider.configure {
        doLast {
            println "\n\n"
            println "###########################################"
            println "#                                         #"
            println "#       ######    ##     #     ######     #"
            println "#      #          #  #   #    #           #"
            println "#      #######    #   #  #    #           #"
            println "#            #    #    # #    #           #"
            println "#      ######     #     ##     ######     #"
            println "#                                         #"
            println "#      Copyright (c) 2016 Aaron Jo.       #"
            println "#                                         #"
            println "#          mcharima5@gmail.com            #"
            println "#                                         #"
            println "###########################################"
            println "\n\n"

            variant.outputs.all { output ->
                println "============================================================"
                println "project id: $variant.applicationId"
                println "project version : $variant.versionName"
                println "project revision : $variant.versionCode"
                println "build name: ${variant.name}"
                println "build type: ${variant.buildType.name}"
                println "output dir : " + variant.packageApplicationProvider.get().outputDirectory
                println "output file : $output.outputFileName"
                println "============================================================"
                println "\n"
            }
        }
    }
}
